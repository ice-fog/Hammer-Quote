/**
 * Начальная инициализация
 */
function init() {

    $('[data-toggle="tooltip"]').tooltip();
    $('.category-widget-sidebar').ntm();
    $('.selectpicker').selectpicker();
    $("#selectAll").click(function () {
        $('input:checkbox').not(this).prop('checked', this.checked);
    });
    $('#search-form').bootstrapValidator({fields: {'search': {validators: {notEmpty: {message: 'Запрос не может быть пустым.'}}}}});

    contentActionHandler();
    categoryActionHandler();
    pagesActionHandler();
    sysPagesActionHandler();
    deliveryActionHandler();
    commentActionHandler();
    feedbackActionHandler();
    editorHandler();
    galleryActionHandler();
    searchHighlightHandler();
    settingsActionHandler();
    statisticsInit();
}


function getGETValues() {
    var vars = {};
    location.search.substr(1).replace(/([^=&]+)=([^&]*)/g, function (o, k, v) {
        vars[k] = v;
    });
    return vars;
}
/**
 * Инициализация WYSIWYG редактора
 */
function editorInit() {
    tinymce.init({
        selector: "textarea#content",
        width: '100%',
        height: 400,
        statusbar: true,
        menubar: false,
        language: 'ru',
        plugins: [
            "advlist autolink lists link image charmap print preview hr anchor pagebreak",
            "searchreplace wordcount visualblocks visualchars code fullscreen",
            "insertdatetime media nonbreaking save table contextmenu directionality",
            "emoticons template paste textcolor colorpicker textpattern uploadimage"
        ],
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | uploadimage media | print preview | forecolor backcolor | link ",
    });

    $(document).on('focusin', function (e) {
        if ($(event.target).closest(".mce-window").length) {
            e.stopImmediatePropagation();
        }
    });
}

/**
 * Обновление страницы
 */
function updateOuter() {
    $('#content-outer').load(document.location.href + ' #content-outer', function () {
        init();
    });
}

/**
 * Подсветка совпадений в результатах поиска
 */
function searchHighlightHandler() {
    if (document.location.href.indexOf('search') < 0) return;
    $("td p").highlight(decodeURI(getGETValues()['search']));
}

// SETTINGS

/**
 * Обработка событий функциональных кнопок
 */
function settingsActionHandler() {
    if (document.location.href.indexOf('settings') < 0) return;
    $('.btn-settings-save').on('click', function () {
        settingsSave();
    });
    $(':checkbox').checkboxpicker();
    $('#settings-form').bootstrapValidator({
        fields: {
            'site-title': {
                validators: {
                    notEmpty: {
                        message: 'Не может быть пустым.'
                    },
                    stringLength: {
                        max: 255,
                        message: 'Не более 255 символов'
                    }
                }
            },
            'site-description': {
                validators: {
                    notEmpty: {
                        message: 'Не может быть пустым.'
                    },
                    stringLength: {
                        max: 255,
                        message: 'Не более 255 символов'
                    }
                }
            },
            'email': {
                validators: {
                    notEmpty: {
                        message: 'Не может быть пустым.'
                    },
                    emailAddress: {
                        message: 'Введите корректный адрес электронной почты.'
                    }
                }
            },
            'records-page': {
                validators: {
                    regexp: {
                        regexp: /^\d+$/,
                        message: 'Только целое число'
                    }
                }
            },
            'gallery-title': {
                validators: {
                    notEmpty: {
                        message: 'Не может быть пустым.'
                    },
                    stringLength: {
                        max: 255,
                        message: 'Не более 255 символов'
                    }
                }
            },
            'gallery-url': {
                validators: {
                    notEmpty: {
                        message: 'Не может быть пустым.'
                    },
                    stringLength: {
                        max: 255,
                        message: 'Не более 255 символов'
                    }
                }
            },
            'gallery-description': {
                validators: {
                    notEmpty: {
                        message: 'Не может быть пустым.'
                    },
                    stringLength: {
                        max: 255,
                        message: 'Не более 255 символов'
                    }
                }
            },
        }
    });
    $('.profile-edit').on('click', function () {
        $.post("/admin/users/ajax", {
                action: 'get-form-edit',
                id: 1
            },
            onAjaxSuccess
        );
        function onAjaxSuccess(data) {
            bootbox.dialog({
                    title: "Редактирование данных пользователя",
                    message: data,
                    buttons: {
                        success: {
                            label: "Сохранить",
                            className: "btn-success",
                            callback: function () {
                                if ($('#login').val().length > 0 && $('#old-password').val().length > 0) {
                                    var error = false;
                                    $.ajax({
                                        type: 'POST',
                                        url: '/admin/users/ajax',
                                        data: $('#user-form-edit').serialize() + '&action=edit&id=1',
                                        success: function (data) {
                                            if (data == 'ok') {
                                                $.notify('Изменения сохранены!', "success");
                                            } else if (data == 'wrong-password') {
                                                error = true;
                                                $('#old-password').val('');
                                                $('#old-password').closest('.form-group').addClass('has-error');
                                                $.notify('Текущий пароль введен неверно!', "error");
                                            } else {
                                                $.notify('Возникла ошибка!', "error");
                                            }
                                        }
                                    });
                                } else {
                                    $('#user-form-edit').submit();
                                    return false;
                                }
                                if (!error) {
                                    return false;
                                }
                            }
                        },
                        danger: {
                            label: "Отмена",
                            className: "btn-danger",
                            callback: function () {
                            }
                        }
                    }
                }
            );
            $('#user-form-edit').bootstrapValidator({
                fields: {
                    'login': {
                        validators: {
                            notEmpty: {
                                message: 'Не может быть пустым.'
                            },
                            stringLength: {
                                max: 32,
                                message: 'Не более 32 символов'
                            }
                        }
                    },
                    'old-password': {
                        validators: {
                            notEmpty: {
                                message: 'Не может быть пустым.'
                            },
                            stringLength: {
                                max: 32,
                                message: 'Не более 32 символов'
                            }
                        }
                    }
                }
            });
        }
    });
}

/**
 * Сохранение настроек скрипта
 */
function settingsSave() {
    var checkEmail = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
    if ($('#site-title').val().length > 0 &&
        $('#site-description').val().length > 0 &&
        $('#gallery-title').val().length > 0 &&
        $('#gallery-url').val().length > 0 &&
        $('#gallery-description').val().length > 0 &&
        checkEmail.test($('#email').val())) {
        bootbox.dialog({
            message: "Сохранить изменения?",
            buttons: {
                success: {
                    label: 'Да',
                    className: "btn-success",
                    callback: function () {
                        $.ajax({
                            type: 'POST',
                            url: '/admin/settings/ajax',
                            data: $('#settings-form').serialize(),
                            success: function (data) {
                                if (data == 'ok') {
                                    $.notify("Изменения сохранены!", "success");
                                } else {
                                    $.notify("Возникла ошибка!", "error");
                                }
                                settingsUpdateOuter();
                            }
                        });
                    }
                },
                danger: {
                    label: 'Нет',
                    className: "btn-danger",
                    callback: function () {
                    }
                }
            }
        });
    } else {
        $('#settings-form').submit();
    }
}

/**
 * Обновление страницы настроек
 */
function settingsUpdateOuter() {
    $('#content-outer').load(document.location.href + ' #content-outer', function () {
        init();
        $(':checkbox').checkboxpicker();
    });
}


// CONTENT

/**
 * Обработка событий функциональных кнопок
 */
function contentActionHandler() {
    $('.content-add').on('click', function () {
        contentAdd();
    });
    $('.btn-content-checkbox').on('click', function () {
        contentCheckboxHandler();
    });
    $('.content-action div').on('click', function () {
        var id = $(this).closest('tr.content-list').attr('id').split('-')[1];
        var action = $(this).attr('class');
        switch (action) {
            case 'content-edit':
                contentEdit(id);
                break;
            case 'content-update-status-on':
                contentUpdateStatus(id, 0);
                break;
            case 'content-update-status-off':
                contentUpdateStatus(id, 1);
                break;
            case 'content-delete':
                contentDelete(id);
                break;

        }
    });
}

/**
 * Добавление записи
 */
function contentAdd() {
    $.post("/admin/content/ajax", {
            action: 'get-form-add'
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Новая запись",
                message: data,
                className: "big-modal",
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            var formData = $('#content-form-add').serialize();
                            if ($('#content').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/content/ajax',
                                    data: formData,
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Запись добавлена!", "success");
                                        } else {
                                            $.notify("Возникла ошибка при добавлении записи!", "error");
                                        }
                                        updateOuter();
                                    }
                                });
                            } else {
                                $('#content-form-add').submit();
                                return false;
                            }

                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        );
        $('.selectpicker').selectpicker();
        $('#content-form-add').bootstrapValidator({
            fields: {
                'content': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                }
            }
        });
    }
}

/**
 * Редактирование записи
 * id - идентификатор записи
 */
function contentEdit(id) {
    $.post("/admin/content/ajax", {
            action: 'get-form-edit',
            id: id
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Редактирование записи",
                message: data,
                className: "big-modal",
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            if ($('#content').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/content/ajax',
                                    data: $('#content-form-edit').serialize(),
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Изменения сохранены!", "success");
                                        } else {
                                            $.notify("Возникла ошибка при редактировании!", "error");
                                        }
                                        updateOuter();
                                    }
                                });
                            } else {
                                $('#content-form-edit').submit();
                                return false;
                            }
                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        );
        $('.selectpicker').selectpicker();
        $('#content-form-edit').bootstrapValidator({
            fields: {
                'content': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                }
            }
        });
    }
}

/**
 * Изменения статуса записи
 * id - идентификатор записи
 * status - статус 1 активна 0 неактивна
 */
function contentUpdateStatus(id, status) {
    var msg = '';
    if (status == 1) {
        msg = "Сделать активной эту запись?";
    } else {
        msg = "Сделать неактивной эту запись?";
    }
    bootbox.dialog({
        message: msg,
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/content/ajax", {
                            action: 'update-status',
                            status: status,
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Изменения сохранены!", "success");
                        } else {
                            $.notify("Возникла ошибка!", "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

/**
 * Смена категории
 * formData - данные формы
 */
function contentChangeCategory(formData) {
    $.post("/admin/content/ajax", {
            action: 'get-form-category-change'
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Смена категории",
                message: data,
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            $.ajax({
                                type: 'POST',
                                url: '/admin/content/ajax',
                                data: $('#change-category-form').serialize() + '&' + formData,
                                success: function (data) {
                                    if (data == 'ok') {
                                        $.notify("Изменения сохранены!", "success");
                                    } else {
                                        $.notify("Возникла ошибка при редактировании!", "error");
                                    }
                                    updateOuter();
                                }
                            });
                        }
                    }
                }
            }
        );
        $('.selectpicker').selectpicker();
        $('#edit-content-form').bootstrapValidator({
            fields: {
                'content': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                }
            }
        });
    }
}

/**
 * Действия над отмеченными записями
 */
function contentCheckboxHandler() {
    var formData = $('#list-content-form').serialize();
    if (formData.indexOf('id') + 1) {
        bootbox.dialog({
            message: 'Выполнить выбраннае действия?',
            buttons: {
                success: {
                    label: 'Да',
                    className: "btn-success",
                    callback: function () {
                        if (formData.indexOf('change-category') + 1) {
                            contentChangeCategory(formData);
                        } else {
                            $.ajax({
                                type: 'POST',
                                url: '/admin/content/ajax',
                                data: formData,
                                success: function (data) {
                                    if (data == 'ok') {
                                        $.notify("Изменения сохранены!", "success");
                                    } else {
                                        $.notify("Возникла ошибка!", "error");
                                    }
                                    updateOuter();
                                }
                            });
                        }

                    }
                },
                danger: {
                    label: 'Нет',
                    className: "btn-danger",
                    callback: function () {
                    }
                }
            }
        });
    } else {
        bootbox.alert('Вы ничего не выбрали');
    }
}

/**
 * Удаление записи
 * id - идентификатор записи
 */
function contentDelete(id) {
    bootbox.dialog({
        message: "Удалить эту запись?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/content/ajax", {
                            action: 'delete',
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify('Запись удалена!', "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}


// COMMENTS

/**
 * Обработка событий функциональных кнопок
 */
function commentActionHandler() {
    if (document.location.href.indexOf('comments') < 0) return;
    $('.btn-comments-checkbox').on('click', function () {
        commentsCheckboxHandler();
    });
    $('.comment-action div').on('click', function () {
        var id = $(this).closest('tr.comments-list').attr('id').split('-')[1];
        var action = $(this).attr('class');
        switch (action) {
            case 'comment-edit':
                commentEdit(id);
                break;
            case 'comment-update-status-on':
                commentUpdateStatus(id, 0);
                break;
            case 'comment-update-status-off':
                commentUpdateStatus(id, 1);
                break;
            case 'comment-delete':
                commentDelete(id);
                break;
        }
    });
}

/**
 * Изменения статуса комментария
 * id - идентификатор комментария
 * status - статус 1 активин 0 неактивин
 */
function commentUpdateStatus(id, status) {
    var msg = '';
    if (status == 1) {
        msg = "Сделать активным этот комментарий?";
    } else {
        msg = "Сделать неактивным этот комментарий?";
    }
    bootbox.dialog({
        message: msg,
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/comments/ajax", {
                            action: 'update-status',
                            status: status,
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Изменения сохранены!", "success");
                        } else {
                            $.notify("Возникла ошибка!", "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

/**
 * Действия над отмеченными комментариями
 */
function commentsCheckboxHandler() {
    var formData = $('#list-comments-form').serialize();
    if (formData.indexOf('id') + 1) {
        bootbox.dialog({
            message: 'Выполнить выбраннае действия?',
            buttons: {
                success: {
                    label: 'Да',
                    className: "btn-success",
                    callback: function () {
                        $.ajax({
                            type: 'POST',
                            url: '/admin/comments/ajax',
                            data: formData,
                            success: function (data) {
                                if (data == 'ok') {
                                    $.notify("Изменения сохранены!", "success");
                                } else {
                                    $.notify("Возникла ошибка!", "error");
                                }
                                updateOuter();
                            }
                        });
                    }
                },
                danger: {
                    label: 'Нет',
                    className: "btn-danger",
                    callback: function () {
                    }
                }
            }
        });
    } else {
        bootbox.alert('Вы ничего не выбрали');
    }
}

/**
 * Редактирование комментария.
 * id - идентификатор комментария.
 */
function commentEdit(id) {
    $.post("/admin/comments/ajax", {
            action: 'get-form-edit',
            id: id
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Редактирование комментария #" + id,
                message: data,
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            var checkEmail = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
                            if ($('#name').val().length > 0 && checkEmail.test($('#email').val()) && $('#message').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/comments/ajax',
                                    data: $('#comment-form-edit').serialize(),
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Изменения сохранены!", "success");
                                        } else {
                                            $.notify("Возникла ошибка при редактировании!", "error");
                                        }
                                        updateOuter();
                                    }
                                });
                            } else {
                                $('#comment-form-edit').submit();
                                return false;
                            }
                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        );
        $('#comment-form-edit').bootstrapValidator({
            fields: {
                'name': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'email': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        emailAddress: {
                            message: 'Введите корректный адрес электронной почты.'
                        }
                    }
                },
                'message': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                }
            }
        });
    }
}

/**
 * Удаление комментария
 * id - идентификатор комментария
 */
function commentDelete(id) {
    bootbox.dialog({
        message: "Удалить этот комментарий?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/comments/ajax", {
                            action: 'delete',
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Комментарий удален!", "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}


// DELIVERY

/**
 * Обработка событий функциональных кнопок
 */
function deliveryActionHandler() {
    if (document.location.href.indexOf('delivery') < 0) return;
    $('.new-delivery').on('click', function () {
        newDelivery();
    });
    $('.btn-email-checkbox').on('click', function () {
        emailCheckboxHandler();
    });
    $('.email-action div').on('click', function () {
        var id = $(this).closest('tr.email-list').attr('id').split('-')[1];
        var action = $(this).attr('class');
        switch (action) {
            case 'email-update-status-on':
                emailUpdateStatus(id, 0);
                break;
            case 'email-update-status-off':
                emailUpdateStatus(id, 1);
                break;
            case 'email-delete':
                emailDelete(id);
                break;

        }
    });
}

/**
 * Добавление записи
 */
function newDelivery() {
    $.post("/admin/delivery/ajax", {
            action: 'get-form-new'
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Новая рассылка",
                message: data,
                className: "big-modal",
                buttons: {
                    success: {
                        label: "Разослать",
                        className: "btn-success",
                        callback: function () {
                            tinyMCE.triggerSave();
                            var formData = $('#delivery-form-new').serialize();
                            if ($('#name').val().length > 0 && $('#content').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/delivery/ajax',
                                    data: formData,
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Рассылка завершена!", "success");
                                        } else {
                                            $.notify("Возникла ошибка!", "error");
                                        }
                                    }
                                });
                            } else {
                                $('#delivery-form-new').submit();
                                return false;
                            }

                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        ).on('hidden.bs.modal', function () {
                tinymce.remove();
            });
        editorInit();
        $('#delivery-form-new').bootstrapValidator({
            fields: {
                'name': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                },
                'content': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                }
            }
        });
    }
}

/**
 * Изменения статуса категории
 * id - идентификатор категории
 * status - статус 1 активна 0 неактивна
 */
function emailUpdateStatus(id, status) {
    var msg = '';
    if (status == 1) {
        msg = "Сделать e-mail активным?";
    } else {
        msg = "Сделать e-mail неактивным?";
    }
    bootbox.dialog({
        message: msg,
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/delivery/ajax", {
                            action: 'update-status',
                            status: status,
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify('Изменения сохранены!', "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

/**
 * Действия над отмеченными катигориями
 */
function emailCheckboxHandler() {

    bootbox.dialog({
        message: 'Выполнить выбраннае действия?',
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.ajax({
                        type: 'POST',
                        url: '/admin/delivery/ajax',
                        data: $('#list-email-form').serialize(),
                        success: function (data) {
                            if (data == 'ok') {
                                $.notify("Изменения сохранены!", "success");
                            } else {
                                $.notify("Возникла ошибка!", "error");
                            }
                            updateOuter();
                        }
                    });
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

/**
 * Удаление e-mail
 * id - идентификатор e-mail
 */
function emailDelete(id) {
    bootbox.dialog({
        message: "Удалить e-mail из списка рассылки?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/delivery/ajax", {
                            action: 'delete',
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("E-mail удален!", "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}


// CATEGORY

/**
 * Обработка событий функциональных кнопок
 */
function categoryActionHandler() {
    if (document.location.href.indexOf('category') < 0) return;
    $('.category-add').on('click', function () {
        categoryAdd();
    });

    $('.btn-category-edit').on('click', function () {
        var ref = $('#category-list').jstree(true),
            sel = ref.get_selected();
        if (!sel.length) {
            return false;
        }
        categoryEdit(sel[0]);
    });

    $('.btn-category-delete').on('click', function () {
        var ref = $('#category-list').jstree(true),
            sel = ref.get_selected();
        if (!sel.length) {
            return false;
        }

        if (sel.length > 1) {
            bootbox.dialog({
                message: "Удалить выделенные категории?",
                buttons: {
                    success: {
                        label: 'Да',
                        className: "btn-success",
                        callback: function () {
                            $.post("/admin/category/ajax", {
                                    'select-action': 'delete',
                                    'action': 'checkbox-handler',
                                    'id': sel
                                },
                                onAjaxSuccess
                            );
                            function onAjaxSuccess(data) {
                                if (data == 'ok') {
                                    $.notify("Категории удалены!", "success");
                                } else {
                                    $.notify('Возникла ошибка!', "error");
                                }
                                $('#category-list').jstree("refresh");
                            }
                        }
                    },
                    danger: {
                        label: 'Нет',
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            });
        } else {
            categoryDelete(sel[0]);
        }
    });

    $('.btn-category-enable').on('click', function () {
        var ref = $('#category-list').jstree(true),
            sel = ref.get_selected();

        if (ref.get_type(ref.get_parent(sel[0])) == 'disabled') {
            bootbox.alert('Родительская категория не активна!');
            return false;
        }
        if (!sel.length) {
            return false;
        }

        if (sel.length > 1) {
            bootbox.dialog({
                message: "Активировать выделенные категории и все дочерние?",
                buttons: {
                    success: {
                        label: 'Да',
                        className: "btn-success",
                        callback: function () {
                            $.post("/admin/category/ajax", {
                                    'select-action': 'enable',
                                    'action': 'checkbox-handler',
                                    'id': sel
                                },
                                onAjaxSuccess
                            );
                            function onAjaxSuccess(data) {
                                if (data == 'ok') {
                                    $.notify('Изменения сохранены!', "success");
                                } else if (data == 'parent-disable') {
                                    $.notify('Родительская категория не активна!', "info");
                                } else {
                                    $.notify('Возникла ошибка!', "error");
                                }
                                $('#category-list').jstree("refresh");
                            }
                        }
                    },
                    danger: {
                        label: 'Нет',
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            });
        } else {
            categoryUpdateStatus(sel[0], 1);
        }
    });

    $('.btn-category-disable').on('click', function () {
        var ref = $('#category-list').jstree(true),
            sel = ref.get_selected();

        if (!sel.length) {
            return false;
        }

        if (sel.length > 1) {
            bootbox.dialog({
                message: "Деактивировать выделенные категории и все дочерние?",
                buttons: {
                    success: {
                        label: 'Да',
                        className: "btn-success",
                        callback: function () {
                            $.post("/admin/category/ajax", {
                                    'select-action': 'disable',
                                    'action': 'checkbox-handler',
                                    'id': sel
                                },
                                onAjaxSuccess
                            );
                            function onAjaxSuccess(data) {
                                if (data == 'ok') {
                                    $.notify('Изменения сохранены!', "success");
                                } else {
                                    $.notify('Возникла ошибка!', "error");
                                }
                                $('#category-list').jstree("refresh");
                            }
                        }
                    },
                    danger: {
                        label: 'Нет',
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            });
        } else {
            categoryUpdateStatus(sel[0], 0);
        }
    });

    $('.btn-category-descendant').on('click', function () {
        var ref = $('#category-list').jstree(true),
            sel = ref.get_selected();
        if (!sel.length) {
            return false;
        }
        sel = sel[0];
        categoryAdd(sel);
    });

    $(function () {
        var to = false;
        $('#category-search').keyup(function () {
            if (to) {
                clearTimeout(to);
            }
            to = setTimeout(function () {
                var v = $('#category-search').val();
                $('#category-list').jstree(true).search(v);
            }, 250);
        });

        $('#category-list').jstree({
            "core": {
                "animation": 0,
                "check_callback": true,
                'force_text': true,
                'themes': {
                    'name': 'default',
                    'responsive': true,
                    "stripes": true
                },
                'data': {
                    "url": "/admin/category/get-json",
                    "dataType": "json"
                }
            },
            "types": {
                "disabled": {
                    "icon": "glyphicon glyphicon glyphicon-eye-close",
                }
            },
            "checkbox": {
                "three_state": false
            },
            "plugins": ["dnd", "search", "wholerow", "checkbox", "types"]


        }).on('changed.jstree', function (e, data) {
            var count = data.selected.length;
            if (count > 1) {
                $('.btn-category-descendant').prop("disabled", true);
                $('.btn-category-edit').prop("disabled", true);
                $('.btn-category-enable').prop("disabled", false);
                $('.btn-category-disable').prop("disabled", false);
                $('.btn-category-delete').prop("disabled", false);
            } else if (count == 1) {
                $('.btn-category-descendant').prop("disabled", false);
                $('.btn-category-edit').prop("disabled", false);
                $('.btn-category-enable').prop("disabled", false);
                $('.btn-category-disable').prop("disabled", false);
                $('.btn-category-delete').prop("disabled", false);
            } else {
                $('.btn-category-descendant').prop("disabled", true);
                $('.btn-category-edit').prop("disabled", true);
                $('.btn-category-enable').prop("disabled", true);
                $('.btn-category-disable').prop("disabled", true);
                $('.btn-category-delete').prop("disabled", true);
            }
        }).on("move_node.jstree", function (e, data) {
            $.post("/admin/category/ajax", {
                    'action': 'update-parent',
                    'parent': data.parent == '#' ? 0 : data.parent,
                    'id': data.node.id
                },
                onAjaxSuccess
            );
            function onAjaxSuccess(data) {
                if (data == 'ok') {
                    $.notify("Изменения сохранены!", "success");
                    $('#category-list').jstree("refresh");
                }
            }
        });
    });
}

/**
 * Добавление категории
 */
function categoryAdd(parent) {
    $.post("/admin/category/ajax", {
            action: 'get-form-add',
            parent: parent
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Новая категория",
                message: data,
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            if ($('#name').val().length > 0 && $('#url').val().length > 0 && $('#description').val().length > 0) {
                                if (!categoryCheckFreeURL($('#url').val())) {
                                    $.notify("Этот адрес уже используется", "error");
                                    $('#url').closest('.form-group').addClass('has-error');
                                    return false;
                                }
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/category/ajax',
                                    data: $('#category-form-add').serialize(),
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify('Категория добавлена!', "success");
                                        } else {
                                            $.notify('Возникла ошибка при добавлении категории!', "error");
                                        }
                                        $('#category-list').jstree("refresh");
                                    }
                                });
                            } else {
                                $('#category-form-add').submit();
                                return false;
                            }
                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        );
        $('.selectpicker').selectpicker();
        $('#name').on("input", function () {
            $('#name').liTranslit({elAlias: $('#url')});
        });
        $('#category-form-add').bootstrapValidator({
            fields: {
                'name': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'url': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'description': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 200,
                            message: 'Не более 200 символов'
                        }
                    }
                }
            }
        });
    }
}

/**
 * Проверяет занят ли url
 * url - url
 */
function categoryCheckFreeURL(url, id) {
    var result = false;
    $.ajax({
        async: false,
        cache: false,
        type: 'POST',
        url: '/admin/category/ajax',
        data: 'action=check-free-url&url=' + url,
        success: function (data) {
            if (data == 'ok') {
                result = true;
            } else {
                if (data == id) {
                    result = true;
                } else {
                    result = false;
                }
            }
        }
    });
    return result;
}

/**
 * Редактирование категории
 * id - идентификатор категории
 */
function categoryEdit(id) {
    $.post("/admin/category/ajax", {
            action: 'get-form-edit',
            id: id
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Редактирование категории",
                message: data,
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            if (!categoryCheckFreeURL($('#url').val(), $('#id').val())) {
                                $.notify("Этот адрес уже используется", "error");
                                $('#url').closest('.form-group').addClass('has-error');
                                return false;
                            }
                            if ($('#name').val().length > 0 && $('#url').val().length > 0 && $('#description').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/category/ajax',
                                    data: $('#category-form-edit').serialize(),
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Изменения сохранены!", "success");
                                        } else {
                                            $.notify("Возникла ошибка при редактировании!", "error");
                                        }
                                        $('#category-list').jstree("refresh");
                                    }
                                });
                            } else {
                                $('#category-form-edit').submit();
                                return false;
                            }
                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        );
        $('.selectpicker').selectpicker();
        $('#name').on("input", function () {
            $('#name').liTranslit({elAlias: $('#url')});
        });
        $('#category-form-edit').bootstrapValidator({
            fields: {
                'name': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'url': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'description': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 200,
                            message: 'Не более 200 символов'
                        }
                    }
                }
            }
        });
    }
}

/**
 * Изменения статуса категории
 * id - идентификатор категории
 * status - статус 1 активна 0 неактивна
 */
function categoryUpdateStatus(id, status) {
    var msg = '';
    if (status == 1) {
        msg = "Сделать эту и все дочерние категории активными?";
    } else {
        msg = "Сделать эту и все дочерние категории неактивными?";
    }
    bootbox.dialog({
        message: msg,
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/category/ajax", {
                            action: 'update-status',
                            status: status,
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify('Изменения сохранены!', "success");
                        } else if (data == 'parent-disable') {
                            $.notify('Родительская категория не активна!', "info");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        $('#category-list').jstree("refresh");
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

/**
 * Удаление категории
 * id - идентификатор категории
 */
function categoryDelete(id) {
    bootbox.dialog({
        message: "Удалить эту катигорию?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/category/ajax", {
                            action: 'delete',
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Категория удалена!", "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        $('#category-list').jstree("refresh");
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}


// SYS PAGES

/**
 * Обработка событий функциональных кнопок
 */
function sysPagesActionHandler() {
    if (document.location.href.indexOf('pages/system') < 0) return;
    $('.sys-pages-action div').on('click', function () {
        var page = $(this).closest('tr.sys-pages-list').attr('id').split('sys-page-')[1];
        var action = $(this).attr('class');
        switch (action) {
            case 'sys-page-edit':
                sysPageEdit(page);
                break;
        }
    });
}

/**
 * Редактирование системный страницы
 * page - идентификатор страницы
 */
function sysPageEdit(page) {
    var title = '';
    if (page == 'home') {
        title = 'Редактирование главной страницы';
    } else if (page == 'not-found') {
        title = 'Редактирование страницы 404';
    }
    $.post("/admin/pages/ajax", {
            action: 'get-form-sys-edit',
            page: page
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: title,
                message: data,
                className: 'big-modal',
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            tinyMCE.triggerSave();
                            if ($('#content').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/pages/ajax',
                                    data: $('#sys-page-form-edit').serialize(),
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Изменения сохранены!", "success");
                                        } else {
                                            $.notify("Возникла ошибка при редактировании!", "error");
                                        }
                                    }
                                });
                            } else {
                                $('#sys-page-form-edit').submit();
                                return false;
                            }
                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        ).on('hidden.bs.modal', function () {
                tinymce.remove();
            });
        editorInit();
        $('.selectpicker').selectpicker();
        $('#sys-page-form-edit').bootstrapValidator({
            fields: {
                'content': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                }
            }
        });
    }
}


// PAGES

/**
 * Обработка событий функциональных кнопок
 */
function pagesActionHandler() {
    if (document.location.href.indexOf('pages') < 0) return;
    $('.page-add').on('click', function () {
        pageAdd();
    });
    $('.bnt-pages-checkbox').on('click', function () {
        pagesCheckboxHandler();
    });
    $('.pages-action div').on('click', function () {
        var id = $(this).closest('tr.pages-list').attr('id').split('-')[1];
        var action = $(this).attr('class');
        switch (action) {
            case 'page-edit':
                pageEdit(id);
                break;
            case 'page-update-status-on':
                pageUpdateStatus(id, 0);
                break;
            case 'page-update-status-off':
                pageUpdateStatus(id, 1);
                break;
            case 'page-delete':
                pageDelete(id);
                break;

        }
    });
}

/**
 * Проверяет занят ли url
 * url - url
 */
function pageCheckFreeURL(url, id) {
    var result = false;
    $.ajax({
        async: false,
        cache: false,
        type: 'POST',
        url: '/admin/pages/ajax',
        data: 'action=check-free-url&url=' + url,
        success: function (data) {
            if (data == 'ok') {
                result = true;
            } else {
                if (data == id) {
                    result = true;
                } else {
                    result = false;
                }
            }
        }
    });
    return result;
}


/**
 * Добавление страницы
 */
function pageAdd() {
    $.post("/admin/pages/ajax", {
            action: 'get-form-add'
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Новая страница",
                message: data,
                className: "big-modal",
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            if (!pageCheckFreeURL($('#url').val())) {
                                $.notify("Этот адрес уже используется", "error");
                                $('#url').closest('.form-group').addClass('has-error');
                                return false;
                            }
                            tinyMCE.triggerSave();
                            if ($('#title').val().length > 0 && $('#url').val().length > 0 && $('#description').val().length > 0 && $('#content').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/pages/ajax',
                                    data: $('#page-form-add').serialize(),
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Страница добавлена!", "success");
                                        } else {
                                            $.notify("Возникла ошибка при добавлении страницы!", "error");
                                        }
                                        updateOuter();
                                    }
                                });
                            } else {
                                $('#page-form-add').submit();
                                return false;
                            }
                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        ).on('hidden.bs.modal', function () {
                tinymce.remove();
            });
        editorInit();
        $('.selectpicker').selectpicker();
        $('#title').on("input", function () {
            $('#title').liTranslit({elAlias: $('#url')});
        });
        $('#page-form-add').bootstrapValidator({
            fields: {
                'title': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'url': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'description': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 200,
                            message: 'Не более 200 символов'
                        }
                    }
                },
                'content': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                },
            }
        });
    }
}

/**
 * Редактирование страницы
 * id - идентификатор страницы
 */
function pageEdit(id) {
    $.post("/admin/pages/ajax", {
            action: 'get-form-edit',
            id: id
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Редактирования страницы",
                message: data,
                className: "big-modal",
                buttons: {
                    success: {
                        label: "Сохранить",
                        className: "btn-success",
                        callback: function () {
                            if (!pageCheckFreeURL($('#url').val(), $('#id').val())) {
                                $.notify("Этот адрес уже используется", "error");
                                $('#url').closest('.form-group').addClass('has-error');
                                return false;
                            }
                            tinyMCE.triggerSave();
                            if ($('#title').val().length > 0 && $('#url').val().length > 0 && $('#description').val().length > 0 && $('#content').val().length > 0) {
                                $.ajax({
                                    type: 'POST',
                                    url: '/admin/pages/ajax',
                                    data: $('#page-form-edit').serialize(),
                                    success: function (data) {
                                        if (data == 'ok') {
                                            $.notify("Изменения сохранены!", "success");
                                        } else {
                                            $.notify("Возникла ошибка при редактировании!", "error");
                                        }
                                        updateOuter();
                                    }
                                });
                            } else {
                                $('#page-form-add').submit();
                                return false;
                            }
                        }
                    },
                    danger: {
                        label: "Отмена",
                        className: "btn-danger",
                        callback: function () {
                        }
                    }
                }
            }
        ).on('hidden.bs.modal', function () {
                tinymce.remove();
            });
        editorInit();
        $('.selectpicker').selectpicker();
        $('#title').on("input", function () {
            $('#title').liTranslit({elAlias: $('#url')});
        });
        $('#page-form-edit').bootstrapValidator({
            fields: {
                'title': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'url': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 255,
                            message: 'Не более 255 символов'
                        }
                    }
                },
                'description': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        },
                        stringLength: {
                            max: 200,
                            message: 'Не более 200 символов'
                        }
                    }
                },
                'content': {
                    validators: {
                        notEmpty: {
                            message: 'Не может быть пустым.'
                        }
                    }
                },
            }
        });
    }
}

/**
 * Изменения статуса страницы
 * id - идентификатор страницы
 * status - статус 1 активна 0 неактивна
 */
function pageUpdateStatus(id, status) {
    var msg = '';
    if (status == 1) {
        msg = "Сделать активной эту страницу?";
    } else {
        msg = "Сделать неактивной эту страницу?";
    }
    bootbox.dialog({
        message: msg,
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/pages/ajax", {
                            action: 'update-status',
                            status: status,
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify('Изменения сохранены!', "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

/**
 * Действия над отмеченными страницами
 */
function pagesCheckboxHandler() {
    var formData = $('#list-pages-form').serialize();
    if (formData.indexOf('id') + 1) {
        bootbox.dialog({
            message: 'Выполнить выбраннае действия?',
            buttons: {
                success: {
                    label: 'Да',
                    className: "btn-success",
                    callback: function () {
                        $.ajax({
                            type: 'POST',
                            url: '/admin/pages/ajax',
                            data: formData,
                            success: function (data) {
                                if (data == 'ok') {
                                    $.notify("Изменения сохранены!", "success");
                                } else {
                                    $.notify("Возникла ошибка!", "error");
                                }
                                updateOuter();
                            }
                        });
                    }
                },
                danger: {
                    label: 'Нет',
                    className: "btn-danger",
                    callback: function () {
                    }
                }
            }
        });
    } else {
        bootbox.alert('Вы ничего не выбрали');
    }
}

/**
 * Удаление страницы
 * id - идентификатор страницы
 */
function pageDelete(id) {
    bootbox.dialog({
        message: "Удалить эту страницу?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/pages/ajax", {
                            action: 'delete',
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Страница удалена!", "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}


// FEEDBACK

/**
 * Обработка событий функциональных кнопок
 */
function feedbackActionHandler() {
    if (document.location.href.indexOf('feedback') < 0) return;
    $('.btn-feedback-checkbox').on('click', function () {
        feedbackCheckboxHandler();
    });
    $('.feedback-action div').on('click', function () {
        var id = $(this).closest('tr.feedback-list').attr('id').split('-')[1];
        var action = $(this).attr('class');
        switch (action) {
            case 'feedback-archive':
                feedbackArchive(id);
                break;
            case 'feedback-delete':
                feedbackDelete(id);
                break;

        }
    });
}

/**
 * перемещения сообщения обратной связи в архив
 * id - идентификатор сообщения
 */
function feedbackArchive(id) {
    bootbox.dialog({
        message: "Переместить сообщение в архив?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/feedback/ajax", {
                            action: 'archive',
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Сообщение перемещено в архив!", "success");
                        } else {
                            $.notify("Возникла ошибка при архивации!", "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

/**
 * Действия над отмеченными сообщениями обратной связи
 */
function feedbackCheckboxHandler() {
    var formData = $('#list-feedback-form').serialize();
    if (formData.indexOf('id') + 1) {
        bootbox.dialog({
            message: 'Выполнить выбраннае действия?',
            buttons: {
                success: {
                    label: 'Да',
                    className: "btn-success",
                    callback: function () {
                        $.ajax({
                            type: 'POST',
                            url: '/admin/feedback/ajax',
                            data: $('#list-feedback-form').serialize(),
                            success: function (data) {
                                if (data == 'ok') {
                                    $.notify("Изменения сохранены!", "success");
                                } else {
                                    $.notify("Возникла ошибка!", "error");
                                }
                                updateOuter();
                            }
                        });
                    }
                },
                danger: {
                    label: 'Нет',
                    className: "btn-danger",
                    callback: function () {
                    }
                }
            }
        });
    } else {
        bootbox.alert('Вы ничего не выбрали');
    }
}

/**
 * Удаление сообщения обратной связи
 * id - идентификатор сообщения
 */
function feedbackDelete(id) {
    bootbox.dialog({
        message: "Удалить это сообщение?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/feedback/ajax", {
                            action: 'delete',
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Сообщение удалено!", "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

// DESIGN


function getFileContent(path) {
    var result = '';
    $.ajax({
        async: false,
        cache: false,
        type: 'POST',
        url: "/admin/editor/load",
        data: "file=" + path,
        success: function (data) {
            result = data;
        }
    });
    return result;
}


function editorHandler() {
    if (document.location.href.indexOf('editor') < 0) return;
    var path = '../public/main.tpl',
        fileList = $('#editor-file-list'),
        btnSave = $('.btn-editor-save'),
        info = $('.editor-info'),
        editor = CodeMirror.fromTextArea(document.getElementById('editor-area'), {
            lineNumbers: true,
            matchBrackets: true,
            mode: 'htmlmixed',
            indentUnit: 4
        });
    editor.getDoc().setValue(getFileContent(path));
    info.text('Сейчас редактируется: ' + path.replace('..', ''));
    fileList.fileTree({
        root: '../public/',
        script: '/admin/editor/get',
        folderEvent: 'click',
        multiFolder: false
    }, function (file) {
        path = file;
        editor.setOption("mode", editorCheckMode(path));
        editor.getDoc().setValue(getFileContent(path));
        info.text('Сейчас редактируется: ' + path.replace('..', ''));
    });

    btnSave.on('click', function () {
        $.post('/admin/editor/save', {file: path, content: editor.getDoc().getValue()},
            function (data) {
                if (data == 'ok') {
                    $.notify("Изменения сохранены!", "success");
                } else {
                    $.notify("Возникла ошибка при сохранении!", "error");
                }
            });
    });
}


function editorCheckMode(file) {
    var temp = file.split('.');
    var mode = '';
    switch (temp[temp.length - 1]) {
        case 'tpl':
            mode = 'htmlmixed';
            break;
        case 'css':
            mode = 'css';
            break;
        case 'js':
            mode = 'javascript';
            break;
    }
    return mode;
}


function imageUpload() {
    var imgZone = document.getElementById('img-zone'),
        collect = {
            filereader: typeof FileReader != 'undefined',
            zone: 'draggable' in document.createElement('span'),
            formdata: !!window.FormData
        },
        acceptedTypes = {
            'image/png': true,
            'image/jpeg': true,
            'image/jpg': true,
            'image/gif': true
        };

    function ajaxUpload(files) {
        $('.progress').removeClass('hidden');
        $('.progress-bar').css({"width": "0%"});
        $('.progress-bar span').html('0% complete');
        var formData = new FormData();
        formData.append('action', 'add');
        for (var i = 0; i < files.length; i++) {
            formData.append('images[]', files[i]);
        }

        $.ajax({
            url: "/admin/gallery/ajax",
            type: 'post',
            data: formData,
            dataType: 'json',
            processData: false,
            contentType: false,
            error: function (request) {
                $.notify("Ошибка загрузки. Некоторые файлы не могут быть загружены!", "error");
            },
            success: function (json) {
                var imgPreview = $('#img-preview');
                var col = '.col-sm-2';
                $('.progress').addClass('hidden');
                var photos = $('<div class="photos"></div>');
                var thumb = '';
                $.each(json.img, function (idx, img) {
                    thumb += '<div class="col-sm-4" id="' + img + '"><div class="thumbnail"><img src="/files/images/thumbnail/' + img + '"/></div></div></div>';
                });
                $(photos).html(thumb);
                var lt = $(col, photos).length;
                $('col', photos).hide();
                $(imgPreview).prepend(photos.html());
                $(col + ':lt(' + lt + ')', imgPreview).fadeIn(2000);
                if (json.error != '')
                    $.notify(json.error, "error");
            },
            progress: function (e) {
                if (e.lengthComputable) {
                    var pct = (e.loaded / e.total) * 100;
                    $('.progress-bar').css({"width": pct + "%"});
                    $('.progress-bar span').html(pct + '% complete');
                }
            }
        });
    }

    function dragHandle(element) {
        element.ondragover = function () {
            return false;
        };
        element.ondragend = function () {
            return false;
        };
        element.ondrop = function (e) {
            e.preventDefault();
            ajaxUpload(e.dataTransfer.files);
        }
    }

    if (collect.zone) {
        dragHandle(imgZone);
    }
    else {
        $.notify("Перетаскивание не поддерживается, воспользуйтесь файловым менеджером!", "error");
    }

    $(document).on('change', '.btn-file :file', function () {
        ajaxUpload(this.files);
        // reset file list
        $('.btn-file :file').val('');
    });

    (function ($, window, undefined) {
        var hasOnProgress = ("onprogress" in $.ajaxSettings.xhr());

        if (!hasOnProgress) {
            return;
        }

        var oldXHR = $.ajaxSettings.xhr;
        $.ajaxSettings.xhr = function () {
            var xhr = oldXHR();
            if (xhr instanceof window.XMLHttpRequest) {
                xhr.addEventListener('progress', this.progress, false);
            }

            if (xhr.upload) {
                xhr.upload.addEventListener('progress', this.progress, false);
            }

            return xhr;
        };
    })(jQuery, window);
}

// GALLERY

/**
 * Добавление изображений
 */
function galleryAdd() {
    $.post("/admin/gallery/ajax", {
            action: 'get-form-add'
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        bootbox.dialog({
                title: "Добавление изображений",
                message: data,
                buttons: {
                    success: {
                        label: "ok",
                        className: "btn-success",
                        callback: function () {
                            updateOuter();
                        }
                    }
                }
            }
        );
        imageUpload();
    }
}

/**
 * Обработка событий функциональных кнопок
 */
function galleryActionHandler() {
    if (document.location.href.indexOf('gallery') < 0) return;
    $('.gallery-add').on('click', function () {
        galleryAdd();
    });
    $('.btn-gallery-checkbox').on('click', function () {
        galleryCheckboxHandler();
    });
    $('.gallery-action div').on('click', function () {
        var id = $(this).closest('div.gallery-item').attr('id').split('-')[1];
        var action = $(this).attr('class');
        switch (action) {
            case 'gallery-update-status-on':
                galleryUpdateStatus(id, 0);
                break;
            case 'gallery-update-status-off':
                galleryUpdateStatus(id, 1);
                break;
            case 'gallery-delete':
                galleryDelete(id);
                break;

        }
    });
}

/**
 * Действия над отмеченными изображениями
 */
function galleryCheckboxHandler() {
    var formArray = $('#gallery-form').serializeArray();
    var formData = $('#gallery-form').serialize();
    $.each(formArray, function (i, field) {
        if ($.isNumeric(field.value)) {
            formData += '&images%5B%5D=' + $('#gallery-' + field.value + ' img').attr('src').split('/')[4];
        }
    });
    if (formData.indexOf('id') + 1) {
        bootbox.dialog({
            message: 'Выполнить выбраннае действия?',
            buttons: {
                success: {
                    label: 'Да',
                    className: "btn-success",
                    callback: function () {
                        $.ajax({
                            type: 'POST',
                            url: '/admin/gallery/ajax',
                            data: formData,
                            success: function (data) {
                                if (data == 'ok') {
                                    $.notify("Изменения сохранены!", "success");
                                } else {
                                    $.notify("Возникла ошибка!", "error");
                                }
                                updateOuter();
                            }
                        });
                    }
                },
                danger: {
                    label: 'Нет',
                    className: "btn-danger",
                    callback: function () {
                    }
                }
            }
        });
    } else {
        bootbox.alert('Вы ничего не выбрали');
    }
}

/**
 * Изменения статуса изображения
 * id - идентификатор  изображения
 * status - статус 1 активное 0 неактивное
 */
function galleryUpdateStatus(id, status) {
    var msg = '';
    if (status == 1) {
        msg = "Сделать изображение активным?";
    } else {
        msg = "Сделать изображение неактивным?";
    }
    bootbox.dialog({
        message: msg,
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    $.post("/admin/gallery/ajax", {
                            action: 'update-status',
                            status: status,
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify('Изменения сохранены!', "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}


/**
 * Удаление изображения
 * name - названия изображения
 */
function galleryDelete(id) {
    bootbox.dialog({
        message: "Удалить это изображение?",
        buttons: {
            success: {
                label: 'Да',
                className: "btn-success",
                callback: function () {
                    var image = $('#gallery-' + id + ' img').attr('src').split('/')[4];
                    $.post("/admin/gallery/ajax", {
                            action: 'delete',
                            image: image,
                            id: id
                        },
                        onAjaxSuccess
                    );
                    function onAjaxSuccess(data) {
                        if (data == 'ok') {
                            $.notify("Изображение удалено!", "success");
                        } else {
                            $.notify('Возникла ошибка!', "error");
                        }
                        updateOuter();
                    }
                }
            },
            danger: {
                label: 'Нет',
                className: "btn-danger",
                callback: function () {
                }
            }
        }
    });
}

function statisticsInit(data) {
    if (document.location.href.indexOf('statistics') < 0) return;
    $('.view-log').on('click', function () {
        $.post("/admin/statistics/ajax", {
                action: 'get-log'
            },
            onAjaxSuccess
        );
        function onAjaxSuccess(data) {
            bootbox.dialog({
                    title: "Последние 1000 запросов",
                    message: '<textarea class="form-control" rows="30" style="font-size: 10px;">' + data + '</textarea>',
                    className: "big-modal",
                    buttons: {
                        success: {
                            label: "Ok",
                            className: "btn-success",
                            callback: function () {

                            }
                        },
                    }
                }
            );
        }
    });


    $.post("/admin/statistics/ajax", {
            action: 'get-stat',
        },
        onAjaxSuccess
    );
    function onAjaxSuccess(data) {
        var labels = [];
        var uniques = [];
        var total = [];
        data = JSON.parse(data);
        $.each(data, function (i, j) {
            labels.push(j.period);
            uniques.push(j.uniques);
            total.push(j.total);
        });
        var barData = {
            labels: labels,
            datasets: [
                {
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: total
                },
                {
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: uniques
                }
            ]

        }
        var ctx = document.getElementById("canvas").getContext("2d");
        window.myBar = new Chart(ctx).Line(barData, {
            responsive: true,
        });
    }
}